/*!
 * JavaScript for Rocket's docs (https://getbootstrap.com/)
 * Copyright 2011-2020 The Bootstrap Authors
 * Copyright 2011-2020 Twitter, Inc.
 * Licensed under the Creative Commons Attribution 3.0 Unported License.
 * For details, see https://creativecommons.org/licenses/by/3.0/.
 */
;(function () {
  "use strict"

  function makeArray(list) {
    return [].slice.call(list)
  }
  ;(function () {
    var checkbox = document.getElementById("flexCheckIndeterminate")
    if (!checkbox) {
      return
    }
    checkbox.indeterminate = true
  })()
  makeArray(document.querySelectorAll(".js-sidenav-group")).forEach(function (sidenavGroup) {
    var groupHasLinks = Boolean(sidenavGroup.querySelector("li"))
    var groupLink = sidenavGroup.querySelector("a")
    if (groupHasLinks) {
      groupLink.addEventListener(
        "click",
        function (e) {
          e.preventDefault()
          e.target.parentNode.classList.toggle("active")
        },
        true
      )
    }
  })
  makeArray(document.querySelectorAll(".tooltip-demo")).forEach(function (tooltip) {
    new bootstrap.Tooltip(tooltip, {
      selector: '[data-toggle="tooltip"]'
    })
  })
  makeArray(document.querySelectorAll('[data-toggle="popover"]')).forEach(function (popover) {
    new bootstrap.Popover(popover)
  })
  makeArray(document.querySelectorAll(".toast")).forEach(function (toastNode) {
    var toast = new bootstrap.Toast(toastNode, {
      autohide: false
    })
    toast.show()
  })
  makeArray(document.querySelectorAll(".tooltip-test")).forEach(function (tooltip) {
    new bootstrap.Tooltip(tooltip)
  })
  makeArray(document.querySelectorAll(".popover-test")).forEach(function (popover) {
    new bootstrap.Popover(popover)
  })
  makeArray(document.querySelectorAll('.bd-example-indeterminate [type="checkbox"]')).forEach(function (checkbox) {
    checkbox.indeterminate = true
  })
  makeArray(document.querySelectorAll('.bd-content [href="#"]')).forEach(function (link) {
    link.addEventListener("click", function (e) {
      e.preventDefault()
    })
  })
  var exampleModal = document.getElementById("exampleModal")
  if (exampleModal) {
    exampleModal.addEventListener("show.bs.modal", function (event) {
      var button = event.relatedTarget
      var recipient = button.getAttribute("data-whatever")
      var modalTitle = exampleModal.querySelector(".modal-title")
      var modalBodyInput = exampleModal.querySelector(".modal-body input")
      modalTitle.innerHTML = "New message to " + recipient
      modalBodyInput.value = recipient
    })
  }
  var btnToggleAnimatedProgress = document.getElementById("btnToggleAnimatedProgress")
  if (btnToggleAnimatedProgress) {
    btnToggleAnimatedProgress.addEventListener("click", function () {
      btnToggleAnimatedProgress.parentNode.querySelector(".progress-bar-striped").classList.toggle("progress-bar-animated")
    })
  }
  var btnHtml = '<div class="bd-clipboard"><button type="button" class="btn-clipboard" title="Copy to clipboard">Copy</button></div>'
  makeArray(document.querySelectorAll("figure.highlight, div.highlight")).forEach(function (element) {
    element.insertAdjacentHTML("beforebegin", btnHtml)
  })
  makeArray(document.querySelectorAll(".btn-clipboard")).forEach(function (btn) {
    var tooltipBtn = new bootstrap.Tooltip(btn)
    btn.addEventListener("mouseleave", function () {
      tooltipBtn.hide()
    })
  })
  var clipboard = new ClipboardJS(".btn-clipboard", {
    target: function (trigger) {
      return trigger.parentNode.nextElementSibling
    }
  })
  clipboard.on("success", function (e) {
    var tooltipBtn = bootstrap.Tooltip.getInstance(e.trigger)
    e.trigger.setAttribute("data-original-title", "Copied!")
    tooltipBtn.show()
    e.trigger.setAttribute("data-original-title", "Copy to clipboard")
    e.clearSelection()
  })
  clipboard.on("error", function (e) {
    var modifierKey = /mac/i.test(navigator.userAgent) ? "\u2318" : "Ctrl-"
    var fallbackMsg = "Press " + modifierKey + "C to copy"
    var tooltipBtn = bootstrap.Tooltip.getInstance(e.trigger)
    e.trigger.setAttribute("data-original-title", fallbackMsg)
    tooltipBtn.show()
    e.trigger.setAttribute("data-original-title", "Copy to clipboard")
  })
})()
;(function () {
  "use strict"
  if (!window.docsearch) {
    return
  }
  var inputElement = document.getElementById("search-input")
  var siteDocsVersion = inputElement.getAttribute("data-docs-version")

  function getOrigin() {
    var location = window.location
    var origin = location.origin
    if (!origin) {
      var port = location.port ? ":" + location.port : ""
      origin = location.protocol + "//" + location.hostname + port
    }
    return origin
  }
  window.docsearch({
    apiKey: "5990ad008512000bba2cf951ccf0332f",
    indexName: "bootstrap",
    inputSelector: "#search-input",
    algoliaOptions: {
      facetFilters: ["version:" + siteDocsVersion]
    },
    transformData: function (hits) {
      return hits.map(function (hit) {
        var currentUrl = getOrigin()
        var liveUrl = "https://getbootstrap.com"
        hit.url = currentUrl.indexOf(liveUrl) !== -1 ? hit.url : hit.url.replace(liveUrl, "")
        if (hit.anchor === "content") {
          hit.url = hit.url.replace(/#content$/, "")
          hit.anchor = null
        }
        return hit
      })
    },
    debug: false
  })
})()
